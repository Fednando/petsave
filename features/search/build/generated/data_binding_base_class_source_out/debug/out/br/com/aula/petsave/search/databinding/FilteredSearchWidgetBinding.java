// Generated by view binder compiler. Do not edit!
package br.com.aula.petsave.search.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.aula.petsave.search.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FilteredSearchWidgetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView age;

  @NonNull
  public final TextInputLayout ageDropdownInputLayout;

  @NonNull
  public final ConstraintLayout filteredSearchWidgetContainer;

  @NonNull
  public final SearchView search;

  @NonNull
  public final AutoCompleteTextView type;

  @NonNull
  public final TextInputLayout typeDropdownInputLayout;

  private FilteredSearchWidgetBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView age, @NonNull TextInputLayout ageDropdownInputLayout,
      @NonNull ConstraintLayout filteredSearchWidgetContainer, @NonNull SearchView search,
      @NonNull AutoCompleteTextView type, @NonNull TextInputLayout typeDropdownInputLayout) {
    this.rootView = rootView;
    this.age = age;
    this.ageDropdownInputLayout = ageDropdownInputLayout;
    this.filteredSearchWidgetContainer = filteredSearchWidgetContainer;
    this.search = search;
    this.type = type;
    this.typeDropdownInputLayout = typeDropdownInputLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FilteredSearchWidgetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FilteredSearchWidgetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.filtered_search_widget, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FilteredSearchWidgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.age;
      AutoCompleteTextView age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.age_dropdown_input_layout;
      TextInputLayout ageDropdownInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (ageDropdownInputLayout == null) {
        break missingId;
      }

      ConstraintLayout filteredSearchWidgetContainer = (ConstraintLayout) rootView;

      id = R.id.search;
      SearchView search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.type;
      AutoCompleteTextView type = ViewBindings.findChildViewById(rootView, id);
      if (type == null) {
        break missingId;
      }

      id = R.id.type_dropdown_input_layout;
      TextInputLayout typeDropdownInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (typeDropdownInputLayout == null) {
        break missingId;
      }

      return new FilteredSearchWidgetBinding((ConstraintLayout) rootView, age,
          ageDropdownInputLayout, filteredSearchWidgetContainer, search, type,
          typeDropdownInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
