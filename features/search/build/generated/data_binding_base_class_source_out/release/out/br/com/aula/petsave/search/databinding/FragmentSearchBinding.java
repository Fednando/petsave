// Generated by view binder compiler. Do not edit!
package br.com.aula.petsave.search.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.aula.petsave.search.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout collapsibleSearchParamsContainer;

  @NonNull
  public final CoordinatorLayout fragmentSearchContainer;

  @NonNull
  public final ImageView initialSearchImageView;

  @NonNull
  public final MaterialTextView initialSearchText;

  @NonNull
  public final ImageView noSearchResultsImageView;

  @NonNull
  public final MaterialTextView noSearchResultsText;

  @NonNull
  public final MaterialCardView searchCardView;

  @NonNull
  public final RecyclerView searchRecyclerView;

  @NonNull
  public final ProgressBar searchRemotelyProgressBar;

  @NonNull
  public final TextView searchRemotelyText;

  @NonNull
  public final ConstraintLayout searchResultsContainer;

  @NonNull
  public final FilteredSearchWidgetBinding searchWidget;

  private FragmentSearchBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout collapsibleSearchParamsContainer,
      @NonNull CoordinatorLayout fragmentSearchContainer, @NonNull ImageView initialSearchImageView,
      @NonNull MaterialTextView initialSearchText, @NonNull ImageView noSearchResultsImageView,
      @NonNull MaterialTextView noSearchResultsText, @NonNull MaterialCardView searchCardView,
      @NonNull RecyclerView searchRecyclerView, @NonNull ProgressBar searchRemotelyProgressBar,
      @NonNull TextView searchRemotelyText, @NonNull ConstraintLayout searchResultsContainer,
      @NonNull FilteredSearchWidgetBinding searchWidget) {
    this.rootView = rootView;
    this.collapsibleSearchParamsContainer = collapsibleSearchParamsContainer;
    this.fragmentSearchContainer = fragmentSearchContainer;
    this.initialSearchImageView = initialSearchImageView;
    this.initialSearchText = initialSearchText;
    this.noSearchResultsImageView = noSearchResultsImageView;
    this.noSearchResultsText = noSearchResultsText;
    this.searchCardView = searchCardView;
    this.searchRecyclerView = searchRecyclerView;
    this.searchRemotelyProgressBar = searchRemotelyProgressBar;
    this.searchRemotelyText = searchRemotelyText;
    this.searchResultsContainer = searchResultsContainer;
    this.searchWidget = searchWidget;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.collapsible_search_params_container;
      AppBarLayout collapsibleSearchParamsContainer = ViewBindings.findChildViewById(rootView, id);
      if (collapsibleSearchParamsContainer == null) {
        break missingId;
      }

      CoordinatorLayout fragmentSearchContainer = (CoordinatorLayout) rootView;

      id = R.id.initial_search_image_view;
      ImageView initialSearchImageView = ViewBindings.findChildViewById(rootView, id);
      if (initialSearchImageView == null) {
        break missingId;
      }

      id = R.id.initial_search_text;
      MaterialTextView initialSearchText = ViewBindings.findChildViewById(rootView, id);
      if (initialSearchText == null) {
        break missingId;
      }

      id = R.id.no_search_results_image_view;
      ImageView noSearchResultsImageView = ViewBindings.findChildViewById(rootView, id);
      if (noSearchResultsImageView == null) {
        break missingId;
      }

      id = R.id.no_search_results_text;
      MaterialTextView noSearchResultsText = ViewBindings.findChildViewById(rootView, id);
      if (noSearchResultsText == null) {
        break missingId;
      }

      id = R.id.search_card_view;
      MaterialCardView searchCardView = ViewBindings.findChildViewById(rootView, id);
      if (searchCardView == null) {
        break missingId;
      }

      id = R.id.searchRecyclerView;
      RecyclerView searchRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchRecyclerView == null) {
        break missingId;
      }

      id = R.id.search_remotely_progress_bar;
      ProgressBar searchRemotelyProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (searchRemotelyProgressBar == null) {
        break missingId;
      }

      id = R.id.search_remotely_text;
      TextView searchRemotelyText = ViewBindings.findChildViewById(rootView, id);
      if (searchRemotelyText == null) {
        break missingId;
      }

      id = R.id.search_results_container;
      ConstraintLayout searchResultsContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchResultsContainer == null) {
        break missingId;
      }

      id = R.id.search_widget;
      View searchWidget = ViewBindings.findChildViewById(rootView, id);
      if (searchWidget == null) {
        break missingId;
      }
      FilteredSearchWidgetBinding binding_searchWidget = FilteredSearchWidgetBinding.bind(searchWidget);

      return new FragmentSearchBinding((CoordinatorLayout) rootView,
          collapsibleSearchParamsContainer, fragmentSearchContainer, initialSearchImageView,
          initialSearchText, noSearchResultsImageView, noSearchResultsText, searchCardView,
          searchRecyclerView, searchRemotelyProgressBar, searchRemotelyText, searchResultsContainer,
          binding_searchWidget);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
