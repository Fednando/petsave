// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package br.com.aula.petsave.common.`data`.api.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class ApiPaginationJsonAdapter(
  moshi: Moshi
) : JsonAdapter<ApiPagination>() {
  private val options: JsonReader.Options = JsonReader.Options.of("count_per_page", "total_count",
      "current_page", "total_pages")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "countPerPage")

  public override fun toString(): String = buildString(35) {
      append("GeneratedJsonAdapter(").append("ApiPagination").append(')') }

  public override fun fromJson(reader: JsonReader): ApiPagination {
    var countPerPage: Int? = null
    var totalCount: Int? = null
    var currentPage: Int? = null
    var totalPages: Int? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> countPerPage = nullableIntAdapter.fromJson(reader)
        1 -> totalCount = nullableIntAdapter.fromJson(reader)
        2 -> currentPage = nullableIntAdapter.fromJson(reader)
        3 -> totalPages = nullableIntAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return ApiPagination(
        countPerPage = countPerPage,
        totalCount = totalCount,
        currentPage = currentPage,
        totalPages = totalPages
    )
  }

  public override fun toJson(writer: JsonWriter, value_: ApiPagination?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("count_per_page")
    nullableIntAdapter.toJson(writer, value_.countPerPage)
    writer.name("total_count")
    nullableIntAdapter.toJson(writer, value_.totalCount)
    writer.name("current_page")
    nullableIntAdapter.toJson(writer, value_.currentPage)
    writer.name("total_pages")
    nullableIntAdapter.toJson(writer, value_.totalPages)
    writer.endObject()
  }
}
