// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package br.com.aula.petsave.common.`data`.api.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class ApiPaginatedAnimalsJsonAdapter(
  moshi: Moshi
) : JsonAdapter<ApiPaginatedAnimals>() {
  private val options: JsonReader.Options = JsonReader.Options.of("animals", "pagination")

  private val nullableListOfApiAnimalAdapter: JsonAdapter<List<ApiAnimal>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, ApiAnimal::class.java), emptySet(),
      "animals")

  private val nullableApiPaginationAdapter: JsonAdapter<ApiPagination?> =
      moshi.adapter(ApiPagination::class.java, emptySet(), "pagination")

  public override fun toString(): String = buildString(41) {
      append("GeneratedJsonAdapter(").append("ApiPaginatedAnimals").append(')') }

  public override fun fromJson(reader: JsonReader): ApiPaginatedAnimals {
    var animals: List<ApiAnimal>? = null
    var pagination: ApiPagination? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> animals = nullableListOfApiAnimalAdapter.fromJson(reader)
        1 -> pagination = nullableApiPaginationAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return ApiPaginatedAnimals(
        animals = animals,
        pagination = pagination
    )
  }

  public override fun toJson(writer: JsonWriter, value_: ApiPaginatedAnimals?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("animals")
    nullableListOfApiAnimalAdapter.toJson(writer, value_.animals)
    writer.name("pagination")
    nullableApiPaginationAdapter.toJson(writer, value_.pagination)
    writer.endObject()
  }
}
