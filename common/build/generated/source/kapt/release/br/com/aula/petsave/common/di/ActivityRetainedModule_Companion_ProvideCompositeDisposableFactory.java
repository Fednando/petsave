// Generated by Dagger (https://dagger.dev).
package br.com.aula.petsave.common.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.reactivex.disposables.CompositeDisposable;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityRetainedModule_Companion_ProvideCompositeDisposableFactory implements Factory<CompositeDisposable> {
  @Override
  public CompositeDisposable get() {
    return provideCompositeDisposable();
  }

  public static ActivityRetainedModule_Companion_ProvideCompositeDisposableFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CompositeDisposable provideCompositeDisposable() {
    return Preconditions.checkNotNullFromProvides(ActivityRetainedModule.Companion.provideCompositeDisposable());
  }

  private static final class InstanceHolder {
    private static final ActivityRetainedModule_Companion_ProvideCompositeDisposableFactory INSTANCE = new ActivityRetainedModule_Companion_ProvideCompositeDisposableFactory();
  }
}
