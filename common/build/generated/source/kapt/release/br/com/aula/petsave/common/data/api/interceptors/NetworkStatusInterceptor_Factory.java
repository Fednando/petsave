// Generated by Dagger (https://dagger.dev).
package br.com.aula.petsave.common.data.api.interceptors;

import br.com.aula.petsave.common.data.api.ConnectionManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkStatusInterceptor_Factory implements Factory<NetworkStatusInterceptor> {
  private final Provider<ConnectionManager> connectionManagerProvider;

  public NetworkStatusInterceptor_Factory(Provider<ConnectionManager> connectionManagerProvider) {
    this.connectionManagerProvider = connectionManagerProvider;
  }

  @Override
  public NetworkStatusInterceptor get() {
    return newInstance(connectionManagerProvider.get());
  }

  public static NetworkStatusInterceptor_Factory create(
      Provider<ConnectionManager> connectionManagerProvider) {
    return new NetworkStatusInterceptor_Factory(connectionManagerProvider);
  }

  public static NetworkStatusInterceptor newInstance(ConnectionManager connectionManager) {
    return new NetworkStatusInterceptor(connectionManager);
  }
}
