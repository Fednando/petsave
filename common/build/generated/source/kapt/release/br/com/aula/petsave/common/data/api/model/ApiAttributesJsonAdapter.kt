// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package br.com.aula.petsave.common.`data`.api.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class ApiAttributesJsonAdapter(
  moshi: Moshi
) : JsonAdapter<ApiAttributes>() {
  private val options: JsonReader.Options = JsonReader.Options.of("spayed_neutered",
      "house_trained", "declawed", "special_needs", "shots_current")

  private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
      moshi.adapter(Boolean::class.javaObjectType, emptySet(), "spayedNeutered")

  public override fun toString(): String = buildString(35) {
      append("GeneratedJsonAdapter(").append("ApiAttributes").append(')') }

  public override fun fromJson(reader: JsonReader): ApiAttributes {
    var spayedNeutered: Boolean? = null
    var houseTrained: Boolean? = null
    var declawed: Boolean? = null
    var specialNeeds: Boolean? = null
    var shotsCurrent: Boolean? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> spayedNeutered = nullableBooleanAdapter.fromJson(reader)
        1 -> houseTrained = nullableBooleanAdapter.fromJson(reader)
        2 -> declawed = nullableBooleanAdapter.fromJson(reader)
        3 -> specialNeeds = nullableBooleanAdapter.fromJson(reader)
        4 -> shotsCurrent = nullableBooleanAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return ApiAttributes(
        spayedNeutered = spayedNeutered,
        houseTrained = houseTrained,
        declawed = declawed,
        specialNeeds = specialNeeds,
        shotsCurrent = shotsCurrent
    )
  }

  public override fun toJson(writer: JsonWriter, value_: ApiAttributes?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("spayed_neutered")
    nullableBooleanAdapter.toJson(writer, value_.spayedNeutered)
    writer.name("house_trained")
    nullableBooleanAdapter.toJson(writer, value_.houseTrained)
    writer.name("declawed")
    nullableBooleanAdapter.toJson(writer, value_.declawed)
    writer.name("special_needs")
    nullableBooleanAdapter.toJson(writer, value_.specialNeeds)
    writer.name("shots_current")
    nullableBooleanAdapter.toJson(writer, value_.shotsCurrent)
    writer.endObject()
  }
}
