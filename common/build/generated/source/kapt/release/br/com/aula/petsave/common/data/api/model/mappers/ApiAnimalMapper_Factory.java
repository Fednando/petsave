// Generated by Dagger (https://dagger.dev).
package br.com.aula.petsave.common.data.api.model.mappers;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiAnimalMapper_Factory implements Factory<ApiAnimalMapper> {
  private final Provider<ApiBreedsMapper> apiBreedsMapperProvider;

  private final Provider<ApiColorsMapper> apiColorsMapperProvider;

  private final Provider<ApiHealthDetailsMapper> apiHealthDetailsMapperProvider;

  private final Provider<ApiHabitatAdaptationMapper> apiHabitatAdaptationMapperProvider;

  private final Provider<ApiPhotoMapper> apiPhotoMapperProvider;

  private final Provider<ApiVideoMapper> apiVideoMapperProvider;

  private final Provider<ApiContactMapper> apiContactMapperProvider;

  public ApiAnimalMapper_Factory(Provider<ApiBreedsMapper> apiBreedsMapperProvider,
      Provider<ApiColorsMapper> apiColorsMapperProvider,
      Provider<ApiHealthDetailsMapper> apiHealthDetailsMapperProvider,
      Provider<ApiHabitatAdaptationMapper> apiHabitatAdaptationMapperProvider,
      Provider<ApiPhotoMapper> apiPhotoMapperProvider,
      Provider<ApiVideoMapper> apiVideoMapperProvider,
      Provider<ApiContactMapper> apiContactMapperProvider) {
    this.apiBreedsMapperProvider = apiBreedsMapperProvider;
    this.apiColorsMapperProvider = apiColorsMapperProvider;
    this.apiHealthDetailsMapperProvider = apiHealthDetailsMapperProvider;
    this.apiHabitatAdaptationMapperProvider = apiHabitatAdaptationMapperProvider;
    this.apiPhotoMapperProvider = apiPhotoMapperProvider;
    this.apiVideoMapperProvider = apiVideoMapperProvider;
    this.apiContactMapperProvider = apiContactMapperProvider;
  }

  @Override
  public ApiAnimalMapper get() {
    return newInstance(apiBreedsMapperProvider.get(), apiColorsMapperProvider.get(), apiHealthDetailsMapperProvider.get(), apiHabitatAdaptationMapperProvider.get(), apiPhotoMapperProvider.get(), apiVideoMapperProvider.get(), apiContactMapperProvider.get());
  }

  public static ApiAnimalMapper_Factory create(Provider<ApiBreedsMapper> apiBreedsMapperProvider,
      Provider<ApiColorsMapper> apiColorsMapperProvider,
      Provider<ApiHealthDetailsMapper> apiHealthDetailsMapperProvider,
      Provider<ApiHabitatAdaptationMapper> apiHabitatAdaptationMapperProvider,
      Provider<ApiPhotoMapper> apiPhotoMapperProvider,
      Provider<ApiVideoMapper> apiVideoMapperProvider,
      Provider<ApiContactMapper> apiContactMapperProvider) {
    return new ApiAnimalMapper_Factory(apiBreedsMapperProvider, apiColorsMapperProvider, apiHealthDetailsMapperProvider, apiHabitatAdaptationMapperProvider, apiPhotoMapperProvider, apiVideoMapperProvider, apiContactMapperProvider);
  }

  public static ApiAnimalMapper newInstance(ApiBreedsMapper apiBreedsMapper,
      ApiColorsMapper apiColorsMapper, ApiHealthDetailsMapper apiHealthDetailsMapper,
      ApiHabitatAdaptationMapper apiHabitatAdaptationMapper, ApiPhotoMapper apiPhotoMapper,
      ApiVideoMapper apiVideoMapper, ApiContactMapper apiContactMapper) {
    return new ApiAnimalMapper(apiBreedsMapper, apiColorsMapper, apiHealthDetailsMapper, apiHabitatAdaptationMapper, apiPhotoMapper, apiVideoMapper, apiContactMapper);
  }
}
